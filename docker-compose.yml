version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: planquery_postgres
    environment:
      POSTGRES_DB: planquery
      POSTGRES_USER: planquery
      POSTGRES_PASSWORD: planquery_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U planquery"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: planquery_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PlanQuery API
  planquery_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: planquery_api
    environment:
      - DATABASE_URL=postgresql://planquery:planquery_password@postgres:5432/planquery
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
    volumes:
      - ./uploads:/app/uploads
      - ./output:/app/output
      - ./indices:/app/indices
      - ./models:/app/models
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: planquery_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/usr/share/nginx/html/static:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - planquery_api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: planquery_network
